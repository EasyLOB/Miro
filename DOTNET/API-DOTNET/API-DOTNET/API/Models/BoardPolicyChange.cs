/* 
 * Platform
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Defines the permissions policies and sharing policies for the board.
    /// </summary>
    [DataContract]
        public partial class BoardPolicyChange :  IEquatable<BoardPolicyChange>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BoardPolicyChange" /> class.
        /// </summary>
        /// <param name="permissionsPolicy">permissionsPolicy.</param>
        /// <param name="sharingPolicy">sharingPolicy.</param>
        public BoardPolicyChange(BoardPermissionsPolicy permissionsPolicy = default(BoardPermissionsPolicy), BoardSharingPolicyChange sharingPolicy = default(BoardSharingPolicyChange))
        {
            this.PermissionsPolicy = permissionsPolicy;
            this.SharingPolicy = sharingPolicy;
        }
        
        /// <summary>
        /// Gets or Sets PermissionsPolicy
        /// </summary>
        [DataMember(Name="permissionsPolicy", EmitDefaultValue=false)]
        public BoardPermissionsPolicy PermissionsPolicy { get; set; }

        /// <summary>
        /// Gets or Sets SharingPolicy
        /// </summary>
        [DataMember(Name="sharingPolicy", EmitDefaultValue=false)]
        public BoardSharingPolicyChange SharingPolicy { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class BoardPolicyChange {\n");
            sb.Append("  PermissionsPolicy: ").Append(PermissionsPolicy).Append("\n");
            sb.Append("  SharingPolicy: ").Append(SharingPolicy).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as BoardPolicyChange);
        }

        /// <summary>
        /// Returns true if BoardPolicyChange instances are equal
        /// </summary>
        /// <param name="input">Instance of BoardPolicyChange to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(BoardPolicyChange input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.PermissionsPolicy == input.PermissionsPolicy ||
                    (this.PermissionsPolicy != null &&
                    this.PermissionsPolicy.Equals(input.PermissionsPolicy))
                ) && 
                (
                    this.SharingPolicy == input.SharingPolicy ||
                    (this.SharingPolicy != null &&
                    this.SharingPolicy.Equals(input.SharingPolicy))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.PermissionsPolicy != null)
                    hashCode = hashCode * 59 + this.PermissionsPolicy.GetHashCode();
                if (this.SharingPolicy != null)
                    hashCode = hashCode * 59 + this.SharingPolicy.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
